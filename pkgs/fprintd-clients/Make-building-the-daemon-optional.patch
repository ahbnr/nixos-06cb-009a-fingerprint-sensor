From 54939183c2652dc4b96cbeb9d6f730e02bb759bc Mon Sep 17 00:00:00 2001
From: Viktor Dragomiretskyy <Viktor.Dragomiretskyy@gmail.com>
Date: Wed, 8 Jul 2020 21:54:15 +1200
Subject: [PATCH] Make building the daemon optional

Co-Authored-By: V <v@anomalous.eu>
---
 data/meson.build  | 12 ++++++------
 meson.build       | 33 ++++++++++++++++++---------------
 meson_options.txt |  4 ++++
 src/meson.build   | 30 ++++++++++++++++--------------
 tests/meson.build |  6 ++----
 5 files changed, 46 insertions(+), 39 deletions(-)

diff --git a/data/meson.build b/data/meson.build
index ece5fc6..9e8f8dd 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -42,14 +42,14 @@ if xmllint.found()
         ])
 endif
 
-install_data('fprintd.conf',
-    install_dir: sysconfdir)
+if get_option('daemon')
+    install_data('fprintd.conf',
+        install_dir: sysconfdir)
+endif
 
 if get_option('man')
-    manfiles = {
-        'fprintd': 1,
-        'pam_fprintd': 8,
-    }
+    manfiles = { 'fprintd': 1 } + \
+        (get_option('pam') ? ({ 'pam_fprintd': 8 }) : {})
 
     foreach man_name, man_section: manfiles
         custom_target('man_' + man_name + '.' + man_section.to_string(),
diff --git a/meson.build b/meson.build
index b155a4a..f0df9a9 100644
--- a/meson.build
+++ b/meson.build
@@ -89,7 +89,7 @@ glib_dep = dependency('glib-2.0', version: '>=' + glib_min_version)
 gio_dep = dependency('gio-2.0', version: '>=' + glib_min_version)
 gio_unix_dep = dependency('gio-unix-2.0', version: '>=' + glib_min_version)
 gmodule_dep = dependency('gmodule-2.0', version: '>=' + glib_min_version)
-libfprint_dep = dependency('libfprint-2', version: '>=' + libfprint_min_version)
+libfprint_dep = dependency('libfprint-2', version: '>=' + libfprint_min_version, required: get_option('daemon'))
 polkit_gobject_dep = dependency('polkit-gobject-1', version: '>= 0.91')
 dbus_dep = dependency('dbus-1', required: false)
 libsystemd_dep = dependency('libsystemd', required: get_option('pam'))
@@ -141,21 +141,23 @@ pam_wrapper_dep = dependency('pam_wrapper', required: get_option('pam'))
 
 xmllint = find_program('xmllint', required: false)
 python3 = find_program('python3') # No meson without it!
-python3_test_modules = {
-    'cairo': true,
-    'dbus': true,
-    'dbusmock': true,
-    'gi': true,
-    'gi.repository.FPrint': true,
-    'pypamtest': get_option('pam'),
-}
-python3_available_modules = []
+if get_option('daemon')
+    python3_test_modules = {
+        'cairo': true,
+        'dbus': true,
+        'dbusmock': true,
+        'gi': true,
+        'gi.repository.FPrint': true,
+        'pypamtest': get_option('pam'),
+    }
+    python3_available_modules = []
 
-foreach module, required : python3_test_modules
-    if required and run_command(python3, '-c', 'import @0@'.format(module)).returncode() != 0
-        error('Python3 module \'' + module + '\' required by test suite not found')
-    endif
-endforeach
+    foreach module, required : python3_test_modules
+        if required and run_command(python3, '-c', 'import @0@'.format(module)).returncode() != 0
+            error('Python3 module \'' + module + '\' required by test suite not found')
+        endif
+    endforeach
+endif
 
 cdata = configuration_data()
 cdata.set_quoted('GETTEXT_PACKAGE', meson.project_name())
@@ -197,6 +199,7 @@ if get_option('pam')
     output += '  PAM module directory: ' + pam_modules_dir
 endif
 output += '\nOptional features:\n'
+output += '  DBus daemon: ' + get_option('daemon').to_string()
 output += '  PAM module: ' + (pam_dep.found() and get_option('pam')).to_string()
 output += '  Manuals: ' + get_option('man').to_string()
 output += '  GTK Doc: ' + get_option('gtk_doc').to_string()
diff --git a/meson_options.txt b/meson_options.txt
index 5daa9a4..9d5f577 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,3 +1,7 @@
+option('daemon',
+    description: 'Build the fprintd daemon',
+    type: 'boolean',
+    value: true)
 option('pam',
     description: 'Build the fprintd PAM module',
     type: 'boolean',
diff --git a/src/meson.build b/src/meson.build
index a7ce3fe..96a1e1d 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -69,17 +69,19 @@ libfprintd_private = static_library('fprintd-private',
     gnu_symbol_visibility: 'hidden',
 )
 
-fprintd = executable('fprintd',
-    sources: [
-        'file_storage.c',
-        'file_storage.h',
-        'fprintd.h',
-        'main.c',
-        'storage.h',
-    ],
-    dependencies: fprintd_deps,
-    link_with: libfprintd_private,
-    gnu_symbol_visibility: 'hidden',
-    install: true,
-    install_dir: fprintd_installdir,
-)
+if get_option('daemon')
+    fprintd = executable('fprintd',
+        sources: [
+            'file_storage.c',
+            'file_storage.h',
+            'fprintd.h',
+            'main.c',
+            'storage.h',
+        ],
+        dependencies: fprintd_deps,
+        link_with: libfprintd_private,
+        gnu_symbol_visibility: 'hidden',
+        install: true,
+        install_dir: fprintd_installdir,
+    )
+endif
diff --git a/tests/meson.build b/tests/meson.build
index 495acbc..415555a 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -18,8 +18,7 @@ python_tests = [
 
 address_sanitizer = get_option('b_sanitize') == 'address'
 
-tests = [
-    'fprintd',
+tests = (get_option('daemon') ? [ 'fprintd' ] : []) + [
     'test_fprintd_utils',
 ]
 
@@ -34,8 +33,7 @@ foreach t: tests
                 'FPRINT_BUILD_DIR=' + meson.build_root() / 'src',
                 'TOPSRCDIR=' + meson.source_root(),
             ],
-            'depends': [
-                fprintd,
+            'depends': (get_option('daemon') ? [ fprintd ] : []) + [
                 fprintd_utils,
             ],
             'suite': [t == 'fprintd' ? 'daemon' : ''],
-- 
2.41.0

